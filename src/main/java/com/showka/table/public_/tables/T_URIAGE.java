/*
 * This file is generated by jOOQ.
*/
package com.showka.table.public_.tables;


import com.showka.table.public_.Indexes;
import com.showka.table.public_.Keys;
import com.showka.table.public_.Public;
import com.showka.table.public_.tables.records.T_URIAGE_RECORD;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_URIAGE extends TableImpl<T_URIAGE_RECORD> {

    private static final long serialVersionUID = 731887794;

    /**
     * The reference instance of <code>PUBLIC.T_URIAGE</code>
     */
    public static final T_URIAGE t_uriage = new T_URIAGE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<T_URIAGE_RECORD> getRecordType() {
        return T_URIAGE_RECORD.class;
    }

    /**
     * The column <code>PUBLIC.T_URIAGE.DENPYO_NUMBER</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> DENPYO_NUMBER = createField("DENPYO_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.KOKYAKU_ID</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> KOKYAKU_ID = createField("KOKYAKU_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.CREATE_FUNCTION</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> CREATE_FUNCTION = createField("CREATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.CREATE_TIMESTAMP</code>.
     */
    public final TableField<T_URIAGE_RECORD, Timestamp> CREATE_TIMESTAMP = createField("CREATE_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.CREATE_USER_ID</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> CREATE_USER_ID = createField("CREATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.RECORD_ID</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> RECORD_ID = createField("RECORD_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.UPDATE_FUNCTION</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> UPDATE_FUNCTION = createField("UPDATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.UPDATE_TIMESTAMP</code>.
     */
    public final TableField<T_URIAGE_RECORD, Timestamp> UPDATE_TIMESTAMP = createField("UPDATE_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.UPDATE_USER_ID</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> UPDATE_USER_ID = createField("UPDATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.VERSION</code>.
     */
    public final TableField<T_URIAGE_RECORD, Integer> VERSION = createField("VERSION", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.HANBAI_KUBUN</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> HANBAI_KUBUN = createField("HANBAI_KUBUN", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.KEIJO_DATE</code>.
     */
    public final TableField<T_URIAGE_RECORD, Timestamp> KEIJO_DATE = createField("KEIJO_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.SHOHIZEIRITSU</code>.
     */
    public final TableField<T_URIAGE_RECORD, Double> SHOHIZEIRITSU = createField("SHOHIZEIRITSU", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.URIAGE_DATE</code>.
     */
    public final TableField<T_URIAGE_RECORD, Timestamp> URIAGE_DATE = createField("URIAGE_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_URIAGE.CANCEL_URIAGE_ID</code>.
     */
    public final TableField<T_URIAGE_RECORD, String> CANCEL_URIAGE_ID = createField("CANCEL_URIAGE_ID", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>PUBLIC.T_URIAGE</code> table reference
     */
    public T_URIAGE() {
        this(DSL.name("T_URIAGE"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.T_URIAGE</code> table reference
     */
    public T_URIAGE(String alias) {
        this(DSL.name(alias), t_uriage);
    }

    /**
     * Create an aliased <code>PUBLIC.T_URIAGE</code> table reference
     */
    public T_URIAGE(Name alias) {
        this(alias, t_uriage);
    }

    private T_URIAGE(Name alias, Table<T_URIAGE_RECORD> aliased) {
        this(alias, aliased, null);
    }

    private T_URIAGE(Name alias, Table<T_URIAGE_RECORD> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FK12V4JQQCK1CDREC88PF37AU7D_INDEX_4, Indexes.PRIMARY_KEY_4D, Indexes.UK_9F7L0VVJA040FK4UIR58IBQUN_INDEX_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<T_URIAGE_RECORD> getPrimaryKey() {
        return Keys.CONSTRAINT_4D;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<T_URIAGE_RECORD>> getKeys() {
        return Arrays.<UniqueKey<T_URIAGE_RECORD>>asList(Keys.CONSTRAINT_4D, Keys.UK_9F7L0VVJA040FK4UIR58IBQUN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<T_URIAGE_RECORD, ?>> getReferences() {
        return Arrays.<ForeignKey<T_URIAGE_RECORD, ?>>asList(Keys.FK12V4JQQCK1CDREC88PF37AU7D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public T_URIAGE as(String alias) {
        return new T_URIAGE(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public T_URIAGE as(Name alias) {
        return new T_URIAGE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public T_URIAGE rename(String name) {
        return new T_URIAGE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public T_URIAGE rename(Name name) {
        return new T_URIAGE(name, null);
    }
}
