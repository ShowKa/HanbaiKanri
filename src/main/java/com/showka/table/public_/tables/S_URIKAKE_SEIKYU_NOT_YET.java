/*
 * This file is generated by jOOQ.
*/
package com.showka.table.public_.tables;


import com.showka.table.public_.Keys;
import com.showka.table.public_.Public;
import com.showka.table.public_.tables.records.S_URIKAKE_SEIKYU_NOT_YET_RECORD;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S_URIKAKE_SEIKYU_NOT_YET extends TableImpl<S_URIKAKE_SEIKYU_NOT_YET_RECORD> {

    private static final long serialVersionUID = 1269829967;

    /**
     * The reference instance of <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET</code>
     */
    public static final S_URIKAKE_SEIKYU_NOT_YET s_urikake_seikyu_not_yet = new S_URIKAKE_SEIKYU_NOT_YET();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<S_URIKAKE_SEIKYU_NOT_YET_RECORD> getRecordType() {
        return S_URIKAKE_SEIKYU_NOT_YET_RECORD.class;
    }

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.URIKAKE_ID</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, String> urikake_id = createField("URIKAKE_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.CREATE_FUNCTION</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, String> create_function = createField("CREATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.CREATE_TIMESTAMP</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, LocalDateTime> create_timestamp = createField("CREATE_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.CREATE_USER_ID</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, String> create_user_id = createField("CREATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.RECORD_ID</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, String> record_id = createField("RECORD_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.UPDATE_FUNCTION</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, String> update_function = createField("UPDATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.UPDATE_TIMESTAMP</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, LocalDateTime> update_timestamp = createField("UPDATE_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.UPDATE_USER_ID</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, String> update_user_id = createField("UPDATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET.VERSION</code>.
     */
    public final TableField<S_URIKAKE_SEIKYU_NOT_YET_RECORD, Integer> version = createField("VERSION", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET</code> table reference
     */
    public S_URIKAKE_SEIKYU_NOT_YET() {
        this(DSL.name("S_URIKAKE_SEIKYU_NOT_YET"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET</code> table reference
     */
    public S_URIKAKE_SEIKYU_NOT_YET(String alias) {
        this(DSL.name(alias), s_urikake_seikyu_not_yet);
    }

    /**
     * Create an aliased <code>PUBLIC.S_URIKAKE_SEIKYU_NOT_YET</code> table reference
     */
    public S_URIKAKE_SEIKYU_NOT_YET(Name alias) {
        this(alias, s_urikake_seikyu_not_yet);
    }

    private S_URIKAKE_SEIKYU_NOT_YET(Name alias, Table<S_URIKAKE_SEIKYU_NOT_YET_RECORD> aliased) {
        this(alias, aliased, null);
    }

    private S_URIKAKE_SEIKYU_NOT_YET(Name alias, Table<S_URIKAKE_SEIKYU_NOT_YET_RECORD> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<S_URIKAKE_SEIKYU_NOT_YET_RECORD> getPrimaryKey() {
        return Keys.CONSTRAINT_A;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<S_URIKAKE_SEIKYU_NOT_YET_RECORD>> getKeys() {
        return Arrays.<UniqueKey<S_URIKAKE_SEIKYU_NOT_YET_RECORD>>asList(Keys.CONSTRAINT_A, Keys.UK_A2658D83SSS5EQ43TO18F58KM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<S_URIKAKE_SEIKYU_NOT_YET_RECORD, ?>> getReferences() {
        return Arrays.<ForeignKey<S_URIKAKE_SEIKYU_NOT_YET_RECORD, ?>>asList(Keys.FKJX3SBDLEAUMCJDCMDMMOETURW);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public S_URIKAKE_SEIKYU_NOT_YET as(String alias) {
        return new S_URIKAKE_SEIKYU_NOT_YET(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public S_URIKAKE_SEIKYU_NOT_YET as(Name alias) {
        return new S_URIKAKE_SEIKYU_NOT_YET(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public S_URIKAKE_SEIKYU_NOT_YET rename(String name) {
        return new S_URIKAKE_SEIKYU_NOT_YET(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public S_URIKAKE_SEIKYU_NOT_YET rename(Name name) {
        return new S_URIKAKE_SEIKYU_NOT_YET(name, null);
    }
}
