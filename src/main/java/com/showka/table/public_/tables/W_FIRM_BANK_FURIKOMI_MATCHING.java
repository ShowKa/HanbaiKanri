/*
 * This file is generated by jOOQ.
*/
package com.showka.table.public_.tables;


import com.showka.table.public_.Keys;
import com.showka.table.public_.Public;
import com.showka.table.public_.tables.records.W_FIRM_BANK_FURIKOMI_MATCHING_RECORD;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class W_FIRM_BANK_FURIKOMI_MATCHING extends TableImpl<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD> {

    private static final long serialVersionUID = -1435417123;

    /**
     * The reference instance of <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING</code>
     */
    public static final W_FIRM_BANK_FURIKOMI_MATCHING w_firm_bank_furikomi_matching = new W_FIRM_BANK_FURIKOMI_MATCHING();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD> getRecordType() {
        return W_FIRM_BANK_FURIKOMI_MATCHING_RECORD.class;
    }

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.FB_FURIKOMI_ID</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, String> fb_furikomi_id = createField("FB_FURIKOMI_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.FURIWAKE_ID</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, String> furiwake_id = createField("FURIWAKE_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.CREATE_FUNCTION</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, String> create_function = createField("CREATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.CREATE_TIMESTAMP</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, LocalDateTime> create_timestamp = createField("CREATE_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.CREATE_USER_ID</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, String> create_user_id = createField("CREATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.RECORD_ID</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, String> record_id = createField("RECORD_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.UPDATE_FUNCTION</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, String> update_function = createField("UPDATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.UPDATE_TIMESTAMP</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, LocalDateTime> update_timestamp = createField("UPDATE_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.UPDATE_USER_ID</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, String> update_user_id = createField("UPDATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING.VERSION</code>.
     */
    public final TableField<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, Integer> version = createField("VERSION", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING</code> table reference
     */
    public W_FIRM_BANK_FURIKOMI_MATCHING() {
        this(DSL.name("W_FIRM_BANK_FURIKOMI_MATCHING"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING</code> table reference
     */
    public W_FIRM_BANK_FURIKOMI_MATCHING(String alias) {
        this(DSL.name(alias), w_firm_bank_furikomi_matching);
    }

    /**
     * Create an aliased <code>PUBLIC.W_FIRM_BANK_FURIKOMI_MATCHING</code> table reference
     */
    public W_FIRM_BANK_FURIKOMI_MATCHING(Name alias) {
        this(alias, w_firm_bank_furikomi_matching);
    }

    private W_FIRM_BANK_FURIKOMI_MATCHING(Name alias, Table<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD> aliased) {
        this(alias, aliased, null);
    }

    private W_FIRM_BANK_FURIKOMI_MATCHING(Name alias, Table<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD> getPrimaryKey() {
        return Keys.CONSTRAINT_A;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD>> getKeys() {
        return Arrays.<UniqueKey<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD>>asList(Keys.CONSTRAINT_A, Keys.UK_F87YWKD2K029GHSGU9B9YF8P8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, ?>> getReferences() {
        return Arrays.<ForeignKey<W_FIRM_BANK_FURIKOMI_MATCHING_RECORD, ?>>asList(Keys.FKGIKKFU7X4CJ37NU7JOSOB3OJB, Keys.FK41MGAYK1QC7W2E1M1BJJRIGYA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public W_FIRM_BANK_FURIKOMI_MATCHING as(String alias) {
        return new W_FIRM_BANK_FURIKOMI_MATCHING(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public W_FIRM_BANK_FURIKOMI_MATCHING as(Name alias) {
        return new W_FIRM_BANK_FURIKOMI_MATCHING(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public W_FIRM_BANK_FURIKOMI_MATCHING rename(String name) {
        return new W_FIRM_BANK_FURIKOMI_MATCHING(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public W_FIRM_BANK_FURIKOMI_MATCHING rename(Name name) {
        return new W_FIRM_BANK_FURIKOMI_MATCHING(name, null);
    }
}
