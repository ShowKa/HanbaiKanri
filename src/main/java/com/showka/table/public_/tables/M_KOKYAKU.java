/*
 * This file is generated by jOOQ.
*/
package com.showka.table.public_.tables;


import com.showka.table.public_.Keys;
import com.showka.table.public_.Public;
import com.showka.table.public_.tables.records.M_KOKYAKU_RECORD;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class M_KOKYAKU extends TableImpl<M_KOKYAKU_RECORD> {

    private static final long serialVersionUID = -2014125142;

    /**
     * The reference instance of <code>PUBLIC.M_KOKYAKU</code>
     */
    public static final M_KOKYAKU m_kokyaku = new M_KOKYAKU();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<M_KOKYAKU_RECORD> getRecordType() {
        return M_KOKYAKU_RECORD.class;
    }

    /**
     * The column <code>PUBLIC.M_KOKYAKU.CODE</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> code = createField("CODE", org.jooq.impl.SQLDataType.VARCHAR(4).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.CREATE_FUNCTION</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> create_function = createField("CREATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.CREATE_TIMESTAMP</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, LocalDateTime> create_timestamp = createField("CREATE_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.CREATE_USER_ID</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> create_user_id = createField("CREATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.RECORD_ID</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> record_id = createField("RECORD_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.UPDATE_FUNCTION</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> update_function = createField("UPDATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.UPDATE_TIMESTAMP</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, LocalDateTime> update_timestamp = createField("UPDATE_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.UPDATE_USER_ID</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> update_user_id = createField("UPDATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.VERSION</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, Integer> version = createField("VERSION", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.ADDRESS</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> address = createField("ADDRESS", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.HANBAI_KUBUN</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> hanbai_kubun = createField("HANBAI_KUBUN", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.KOKYAKU_KUBUN</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> kokyaku_kubun = createField("KOKYAKU_KUBUN", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.NAME</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> name = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.M_KOKYAKU.SHUKAN_BUSHO_ID</code>.
     */
    public final TableField<M_KOKYAKU_RECORD, String> shukan_busho_id = createField("SHUKAN_BUSHO_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.M_KOKYAKU</code> table reference
     */
    public M_KOKYAKU() {
        this(DSL.name("M_KOKYAKU"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.M_KOKYAKU</code> table reference
     */
    public M_KOKYAKU(String alias) {
        this(DSL.name(alias), m_kokyaku);
    }

    /**
     * Create an aliased <code>PUBLIC.M_KOKYAKU</code> table reference
     */
    public M_KOKYAKU(Name alias) {
        this(alias, m_kokyaku);
    }

    private M_KOKYAKU(Name alias, Table<M_KOKYAKU_RECORD> aliased) {
        this(alias, aliased, null);
    }

    private M_KOKYAKU(Name alias, Table<M_KOKYAKU_RECORD> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<M_KOKYAKU_RECORD> getPrimaryKey() {
        return Keys.CONSTRAINT_2F;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<M_KOKYAKU_RECORD>> getKeys() {
        return Arrays.<UniqueKey<M_KOKYAKU_RECORD>>asList(Keys.CONSTRAINT_2F, Keys.UK_7UBB14KG5P5MBCYPBMRVYR7HO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<M_KOKYAKU_RECORD, ?>> getReferences() {
        return Arrays.<ForeignKey<M_KOKYAKU_RECORD, ?>>asList(Keys.FKM9UAXXH78HO91ET19MDDUBHGL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public M_KOKYAKU as(String alias) {
        return new M_KOKYAKU(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public M_KOKYAKU as(Name alias) {
        return new M_KOKYAKU(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public M_KOKYAKU rename(String name) {
        return new M_KOKYAKU(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public M_KOKYAKU rename(Name name) {
        return new M_KOKYAKU(name, null);
    }
}
