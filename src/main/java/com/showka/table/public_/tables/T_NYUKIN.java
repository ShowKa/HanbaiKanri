/*
 * This file is generated by jOOQ.
*/
package com.showka.table.public_.tables;


import com.showka.table.public_.Keys;
import com.showka.table.public_.Public;
import com.showka.table.public_.tables.records.T_NYUKIN_RECORD;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_NYUKIN extends TableImpl<T_NYUKIN_RECORD> {

    private static final long serialVersionUID = 663929624;

    /**
     * The reference instance of <code>PUBLIC.T_NYUKIN</code>
     */
    public static final T_NYUKIN t_nyukin = new T_NYUKIN();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<T_NYUKIN_RECORD> getRecordType() {
        return T_NYUKIN_RECORD.class;
    }

    /**
     * The column <code>PUBLIC.T_NYUKIN.ID</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> id = createField("ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.CREATE_FUNCTION</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> create_function = createField("CREATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.CREATE_TIMESTAMP</code>.
     */
    public final TableField<T_NYUKIN_RECORD, LocalDateTime> create_timestamp = createField("CREATE_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.CREATE_USER_ID</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> create_user_id = createField("CREATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.RECORD_ID</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> record_id = createField("RECORD_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.UPDATE_FUNCTION</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> update_function = createField("UPDATE_FUNCTION", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.UPDATE_TIMESTAMP</code>.
     */
    public final TableField<T_NYUKIN_RECORD, LocalDateTime> update_timestamp = createField("UPDATE_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.UPDATE_USER_ID</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> update_user_id = createField("UPDATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false).defaultValue(org.jooq.impl.DSL.field("'default'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.VERSION</code>.
     */
    public final TableField<T_NYUKIN_RECORD, Integer> version = createField("VERSION", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.BUSHO_ID</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> busho_id = createField("BUSHO_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.DATE</code>.
     */
    public final TableField<T_NYUKIN_RECORD, LocalDateTime> date = createField("DATE", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.KINGAKU</code>.
     */
    public final TableField<T_NYUKIN_RECORD, Integer> kingaku = createField("KINGAKU", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.KOKYAKU_ID</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> kokyaku_id = createField("KOKYAKU_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_NYUKIN.NYUKIN_HOHO_KUBUN</code>.
     */
    public final TableField<T_NYUKIN_RECORD, String> nyukin_hoho_kubun = createField("NYUKIN_HOHO_KUBUN", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.T_NYUKIN</code> table reference
     */
    public T_NYUKIN() {
        this(DSL.name("T_NYUKIN"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.T_NYUKIN</code> table reference
     */
    public T_NYUKIN(String alias) {
        this(DSL.name(alias), t_nyukin);
    }

    /**
     * Create an aliased <code>PUBLIC.T_NYUKIN</code> table reference
     */
    public T_NYUKIN(Name alias) {
        this(alias, t_nyukin);
    }

    private T_NYUKIN(Name alias, Table<T_NYUKIN_RECORD> aliased) {
        this(alias, aliased, null);
    }

    private T_NYUKIN(Name alias, Table<T_NYUKIN_RECORD> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<T_NYUKIN_RECORD> getPrimaryKey() {
        return Keys.CONSTRAINT_4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<T_NYUKIN_RECORD>> getKeys() {
        return Arrays.<UniqueKey<T_NYUKIN_RECORD>>asList(Keys.CONSTRAINT_4, Keys.UK_L792YLAIHK8HQ7S2FG0EPWB70);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<T_NYUKIN_RECORD, ?>> getReferences() {
        return Arrays.<ForeignKey<T_NYUKIN_RECORD, ?>>asList(Keys.FK373T5DKXS4W8AX6S8YKTKCYF1, Keys.FKEBDCJX6BN1VW9767JNL3HIFC3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public T_NYUKIN as(String alias) {
        return new T_NYUKIN(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public T_NYUKIN as(Name alias) {
        return new T_NYUKIN(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public T_NYUKIN rename(String name) {
        return new T_NYUKIN(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public T_NYUKIN rename(Name name) {
        return new T_NYUKIN(name, null);
    }
}
